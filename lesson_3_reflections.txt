GitHub

(git remote) -> Show remotes connected
(git remote add "new remote local name" url) -> create new remote repo connection eg. "origin"
(git remote -v) -> Show remotes info verbose
(git push "remote to send info" "branch to send")

When would you want to use a remote repository rather than keeping all your work local?

When you want to colaborate with others, share your work/thoughts, or distribute your work.

(git pull "remote to send info" "branch to send") -> eg. git pull origin master

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because you might want to check what git will pull from the remote. Someone else might have changed the file on the remote and you might
not want to pull that change locally.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks: only on GitHub is for clonning another user's repository on GitHub. When you want to work on that reposiory without changing the
original (or do not have permition to change it) you fork it to your own account on GitHub and work from there or clone it locally. Branches 
are usually different versions of a project that can be clonned individually.

(git fetch) -> update local copy of origin/master branch without affecting the local master branch. Can then use git log and git diff to
see changes etc.

(git pull origin master) is the same as (git fetch origin) followed by (git merge master origin/master)

(git branch -a)

What is the benefit of having a copy of the last known state of the remote stored locally?

That you can see what changes have been introduced to the remote since then and have a copy even if the remote is deleted.
